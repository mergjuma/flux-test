#UPSTREAM SOURCE: https://github.com/aws/aws-node-termination-handler/releases/download/v1.4.0/all-resources.yaml
#removed PSP from upstream and PSP dependences(clusterrole,rolebinding)
# Source: aws-node-termination-handler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-node-termination-handler
  namespace: ops
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.4.0"
---
# Source: aws-node-termination-handler/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-node-termination-handler
rules:
- apiGroups:
    - ""
  resources:
    - nodes
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - list
- apiGroups:
    - ""
  resources:
    - pods/eviction
  verbs:
    - create
- apiGroups:
    - extensions
  resources:
    - daemonsets
  verbs:
    - get
- apiGroups:
    - apps
  resources:
    - daemonsets
  verbs:
    - get
---
# Source: aws-node-termination-handler/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-node-termination-handler
subjects:
- kind: ServiceAccount
  name: aws-node-termination-handler
  namespace: ops
roleRef:
  kind: ClusterRole
  name: aws-node-termination-handler
  apiGroup: rbac.authorization.k8s.io
---
# Source: aws-node-termination-handler/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aws-node-termination-handler
  namespace: ops
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    k8s-app: aws-node-termination-handler
    app.kubernetes.io/version: "1.4.0"
spec:
  updateStrategy:
    null
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-node-termination-handler
      app.kubernetes.io/instance: aws-node-termination-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-node-termination-handler
        app.kubernetes.io/instance: aws-node-termination-handler
        k8s-app: aws-node-termination-handler
    spec:
      volumes:
        - name: "uptime"
          hostPath:
            path: "/proc/uptime"
      priorityClassName: ""
      affinity:
        nodeAffinity:
          # NOTE(jaypipes): Change when we complete
          # https://github.com/aws/aws-node-termination-handler/issues/8
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "beta.kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "beta.kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
                      - arm
                      - arm64
      serviceAccountName: aws-node-termination-handler
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: aws-node-termination-handler
          image: amazon/aws-node-termination-handler:v1.4.0
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: "uptime"
              mountPath: "/proc/uptime"
              readOnly: true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SPOT_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DELETE_LOCAL_DATA
            value: "true"
          - name: IGNORE_DAEMON_SETS
            value: ""
          - name: GRACE_PERIOD
            value: ""
          - name: POD_TERMINATION_GRACE_PERIOD
            value: ""
          - name: INSTANCE_METADATA_URL
            value: ""
          - name: NODE_TERMINATION_GRACE_PERIOD
            value: ""
          - name: WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                name: ops-kubernetes-dev-slack-webhook-url
                key: address
          - name: WEBHOOK_HEADERS
            value: ""
          - name: WEBHOOK_TEMPLATE
            value: ""
          - name: DRY_RUN
            value: "false"
          - name: ENABLE_SPOT_INTERRUPTION_DRAINING
            value: ""
          - name: ENABLE_SCHEDULED_EVENT_DRAINING
            value: "true"
          - name: METADATA_TRIES
            value:
          - name: CORDON_ONLY
            value:
          - name: JSON_LOGGING
            value:
          - name: WEBHOOK_PROXY
            value: ""
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      tolerations:
        - operator: Exists
